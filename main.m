% Add Documentation
addpath results/ matlab/ fits/ data/

list = dir('data/*.csv');

tic
for i = 1:length(list)

    clc; close all
    fileName = list(i).name; 

    input = readIn(strcat(fileName));

    mkdir(strcat('results/', fileName))
    mkdir(strcat('results/figures/', fileName))

    % Analyze and plot all data (~10 min) 
        % (TO DO: Separate analysis and plotting)
    titleLabel = input.Properties.VariableNames;
    output.breakpoint = [];
    output.intercept = [];
    output.slope = [];
    output.residuals = []; 
    output.r2 = [];
    output.R2total = [];
    output.pval = [];
    for i = 2:numel(titleLabel)
        resultsAll = thresholdAnalysisPlotGenerator(...
            input.(titleLabel{i}), ...
            input.year, ...
            titleLabel(:,i));

        % reassemble results
        output.breakpoint = [output.breakpoint, ...
            table(resultsAll.thresh(1),'VariableNames',titleLabel(i))];
        output.residuals = [output.residuals, ...
            table(resultsAll.resids,'VariableNames',titleLabel(i))]; 
        output.intercept = [output.intercept, ...
            table(resultsAll.intercept, ...
            'VariableNames',titleLabel(i), ...
            'RowNames',{'below','above'})];
        output.slope = [output.slope, ...
            table(resultsAll.slope, ...
            'VariableNames',titleLabel(i), ...
            'RowNames',{'below','above'})];
        output.r2 = [output.r2, ...
            table([resultsAll.r2.lo; resultsAll.r2.hi],...
            'VariableNames',titleLabel(i),...
            'RowNames',{'below','above'})];
        output.R2total = [output.R2total, ...
            table(resultsAll.r2_total2,'VariableNames',titleLabel(i))];  
        output.pval = [output.pval, ...
            table([resultsAll.pval.lo; resultsAll.pval.hi], ...
            'VariableNames',titleLabel(i), ...
            'RowNames',{'below','above'})];


        % fig settings
        ylim([-15 40])
        xlim([min(input{:,1})-1 max(input{:,1})+1])
        f = gcf; 
        set(f,'Units','Inches');
        tmppos = get(f,'Position');
        set(f,'PaperPositionMode','Auto','PaperUnits',...
            'Inches','PaperSize',[tmppos(3), tmppos(4)])
        print(strcat('results/figures/',fileName, '/', ...
            fileName, '_', titleLabel{:,i}),'-dpdf')
    end

    fNames = fieldnames(output);
    writetable(output.(fNames{1}), ...
        strcat('results/',fileName,'/',fileName,'_',fNames{1},'.csv'), ...
        'Delimiter',',')
    writetable(output.(fNames{2}), ...
        strcat('results/',fileName,'/',fileName,'_',fNames{2},'.csv'), ...
        'Delimiter',',')
    writetable(output.(fNames{3}), ...
        strcat('results/',fileName,'/',fileName,'_',fNames{3},'.csv'), ...
        'Delimiter',',')
    writetable(output.(fNames{4}), ...
        strcat('results/',fileName,'/',fileName,'_',fNames{4},'.csv'), ...
        'Delimiter',',')
    writetable(output.(fNames{5}), ...
        strcat('results/',fileName,'/',fileName,'_',fNames{5},'.csv'), ...
        'Delimiter',',')
    writetable(output.(fNames{6}), ...
        strcat('results/',fileName,'/',fileName,'_',fNames{6},'.csv'), ...
        'Delimiter',',')
    writetable(output.(fNames{7}), ...
        strcat('results/',fileName,'/',fileName,'_',fNames{7},'.csv'), ...
        'Delimiter',',')
    clear output input resultsAll
end
toc
beep